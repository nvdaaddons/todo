# Getting all nvda addon team repositories #

If you are a community team reviewer, or want to learn how addons are written, you probably want to bulk clone or manage the available repositories.
There are two ways of doing so at the moment, documented below.

But first, to reduce the amount of times that you have to enter your username/password, it is recommended that you set up an ssh key and associate it with your account.
To do so, please follow the steps outlined at:
https://confluence.atlassian.com/display/BITBUCKET/Set+up+SSH+for+Git


## Using mr, myRepositories ##

This assumes that you have setup and associated an ssh key with your account.


### Get and install Perl ###

If you are using cygwin, you probably have perl already installed, if you are using git bash, you can download and install perl from http://www.perl.org/get.html
When running the install, make sure you check the checkbox for adding perl to the system path.

To check that perl is correctly working from the terminal, you can type:

    perl --version

If everything went according to plan then you should see the perl version number.

### Getting the mr script ###

In the terminal download the mr perl script, and move it to a directory in the path.

    wget https://raw.github.com/mhameed/myrepos/master/mr
    mv mr /usr/bin/

To check that mr is working, now type:

    mr --version

Note: this version is needed, because it contains a fix to a bug in the official version.

@mhameed, update url when patch has been accepted.

 
### Setting up the directory structure ###

Now create a directory on one of your partitions, which is easely reachable, and does not have a space in its path.
something like:

    c:\nvdaSources\

Navigate to the directory using the cygwin or git bash terminal, and clone the addon team configuration repo.

    git clone https://bitbucket.org/nvdaaddonteam/nvda-mrconfig .

Now we need to tell mr to trust this downloaded config and run it.

    echo `pwd`/.mrconfig >>~/.mrtrust
    echo "[`pwd`]" >>~/.mrconfig
    echo "chain = true" >>~/.mrconfig
    echo "update = echo" >>~/.mrconfig
    echo "checkout = echo" >>~/.mrconfig

### Using mr ###

now running mr update anywhere should update your enabled repos, or if you are already inside a git repo it will update just this repo.
For more information, read the mr perl script, which is well documented.
The mr home page is: http://myrepos.branchable.com/


## Using python and bat scripts ##

**Alberto, please insert documentation here**

## help ##

If something listed in this document doesn't work for you or you have additional tips or ideas for enhancement, please modify this document and/or discuss them on the addon list.

